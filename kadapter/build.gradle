apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.jetbrains.dokka-android'
android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0.4"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }


    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

task makeJar(type: Jar) {
    archiveName 'kadapter-1.0.4-sources.jar'
    //添加项目中java生成的class文件目录
    from('build/intermediates/classes/release/')
    //添加项目中kotlin生成的class文件目录
    from('build/tmp/kotlin-classes/release')
//    from(project.zipTree("libs/wiwide_sdk_7_4_1.jar"))

//    添加Kotlin库(方法1)
    from {
        String[] include = [
                "kotlin-runtime-${kotlin_version}.jar",
                "kotlin-stdlib-${kotlin_version}.jar"
        ]
        configurations.compile
                .findAll { include.contains(it.name) }
                .collect { it.isDirectory() ? it : zipTree(it) }
    }

    destinationDir = file('build/libs')

//    exclude('wiwide_sdk/BuildConfig.class')
//    exclude('包名/BuildConfig\$*.class')
    exclude('**/R.class')
    exclude('**/R\$*.class')
    exclude('androidx/*')
    exclude('androidx')
    exclude('android/**')

    //以下为此处第三方库需包含文件（gson、okhttp、okio）
//    include('com/**')
//    include('org/**')
//    include('kotlin/**')
    include('**/**')
//    include('okhttp3/**')
//    include('okio/**')
}
//makeJar.dependsOn(build)



/** 以下开始是将Android Library上传到jcenter的相关配置**/

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

//项目主页
def siteUrl = 'https://github.com/UCodeUStory/KAdapter'    // project homepage
//项目的版本控制地址
def gitUrl = 'https://github.com/UCodeUStory/KAdapter.git' // project git

//发布到组织名称名字，必须填写
group = "cn.ustory.qy"
//发布到JCenter上的项目名字，必须填写
def libName = "kadapter"
// 版本号，下次更新是只需要更改版本号即可
version = "1.0.4"
/**  上面配置后上传至jcenter后的编译路径是这样的： compile 'cn.bluemobi.dylan:sqlitelibrary:1.0'  **/

//生成源文件
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
////生成文档
//task javadoc(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//    options.encoding "UTF-8"
//    options.charSet 'UTF-8'
//    options.author true
//    options.version true
//    options.links "https://github.com/UCodeUStory/KAdapter/master/docs/"
//    failOnError false
//}
//
////文档打包成jar
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
////拷贝javadoc文件
//task copyDoc(type: Copy) {
//    from "${buildDir}/docs/"
//    into "docs"
//}



task generateSourcesJar(type: Jar) {
    group = 'jar'
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    options.encoding = "UTF-8"
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = "javadoc"
    outputDirectory = javadoc.destinationDir
}

task generateJavadoc(type: Jar, dependsOn: dokkaJavadoc) {
    group = 'jar'
    classifier = 'javadoc'
    from javadoc.destinationDir
}




//上传到jcenter所需要的源码文件
artifacts {
    archives generateJavadoc
    archives makeJar
}

// 配置maven库，生成POM.xml文件
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                name 'This is a lightweight KAdapter framework'
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'qiyuelife'
                        name 'qiyuelife'
                        email 'qiyuelife@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

//上传到jcenter
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")    //读取 local.properties 文件里面的 bintray.user
    key = properties.getProperty("bintray.apikey")   //读取 local.properties 文件里面的 bintray.apikey
    configurations = ['archives']
    pkg {
        userOrg="ustoryforyou"
        repo = "kotlin_maven"
        name = libName    //发布到JCenter上的项目名字，必须填写
        desc = 'This is a kotlin Adapter framework'    //项目描述
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}

/**
 *  ./gradlew build
 * ./gradlew install
   ./gradlew bintrayUpload
 */

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation "com.android.support:recyclerview-v7:28.0.0"
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
